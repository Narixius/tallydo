{"version":3,"sources":["store/todo/actions.ts","store/todo/index.ts","store/tag/index.ts","store/index.ts","store/tag/actions.ts","components/logo.tsx","components/TodoAdder/Dates.tsx","components/TodoAdder/Tags.tsx","components/TodoAdder/index.tsx","components/TodoList/TodoItem.tsx","components/TodoList/TodoGroup.tsx","components/TodoList/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ADD","UpdateTodo","todo","type","payload","Todo","title","description","dueDate","tags","id","isCompleted","this","baseId","v","Tag","color","defaultTodo","defaultTage","localStorage","getItem","length","JSON","parse","isArray","forEach","item","push","data","defaultTags","rootState","combineReducers","todos","state","action","filter","getId","window","setItem","stringify","Logo","className","size","Dates","onDateChange","React","useState","selectedDate","setSelectedDate","showCalendar","setShowCalendar","customDate","setCustomDate","generateClassName","fieldName","defaultClass","onClick","undefined","Date","dayjs","add","toDate","format","numberOfMonths","onDayClick","e","mapDispatchToProps","AddTag","tag","RemoveTag","connect","onTagAdd","onTagRemove","selectedTag","setSelectedTag","showAddInput","setShowAddInput","customColor","setCustomColor","tagTitle","setTagTitle","tagName","includes","selectTag","submitTodo","map","index","key","style","backgroundColor","placeholder","onChange","currentTarget","value","onKeyUp","onChangeComplete","hex","AddTodo","onTimelineControllerClicked","titleInput","createRef","setValue","addTodoHandler","trim","clone","current","ref","target","date","t","TodoItem","onTodoCheck","todoCheckBoxClassName","todoTitleClassName","isChecked","maxWidth","getTags","getTitle","overflowX","extend","customParseFormat","isToday","isTomorrow","groups","keys","sortBy","Object","clonedGroups","zipObject","todoCheckedHandler","setChecked","FunctionalTodoItem","forwardRef","props","staggerDurationBy","duration","appearAnimation","enterAnimation","leaveAnimation","groupName","d","year","parseGroupName","isDragging","openStyle","top","opened","policy","Comp","forwardedRef","console","log","groupBy","getDueDate","setStyle","openTimeline","closeTimeline","innerHeight","mouseHandler","onTouchStart","touches","screenY","parseInt","onTouchMove","onTouchEnd","onMouseDown","App","todoListRef","useRef","setTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.c84d467a.chunk.js","sourcesContent":["import {Todo} from \"./index\"\r\n\r\ninterface IAction {\r\n\ttype: string\r\n}\r\n\r\nexport const ADD = 'ADD_TODO';\r\ninterface IAddTodo extends IAction {\r\n  type: typeof ADD;\r\n  payload: Todo;\r\n}\r\n\r\nexport function AddTodo(todo: Todo): IAddTodo {\r\n  return {\r\n    type: ADD,\r\n    payload: todo,\r\n  };\r\n}\r\n\r\nexport const UPDATE = 'UPDATE_TODO';\r\ninterface IUpdateTodo extends IAction {\r\n  type: typeof UPDATE;\r\n  payload: Todo;\r\n}\r\n\r\nexport function UpdateTodo(todo: Todo): IUpdateTodo {\r\n  return {\r\n    type: UPDATE,\r\n    payload: todo,\r\n  };\r\n}\r\n\r\nexport type TodoActions = IAddTodo | IUpdateTodo;\r\n","import { ADD,TodoActions, UPDATE } from './actions';\r\nimport {Tag} from \"../tag\"\r\nexport class Todo {\r\n\tprivate static baseId:number = 0;\r\n\tprivate readonly id:number;\r\n\tprivate isCompleted:boolean;\r\n\tconstructor(private title:string, private description: string, private dueDate: Date, private tags: Tag[]){\r\n\t\tthis.id = ++Todo.baseId;\r\n\t\tthis.isCompleted = false\r\n\t}\r\n\tpublic getTitle():string{\r\n\t\treturn this.title;\r\n\t}\r\n\tpublic getId():number{\r\n\t\treturn this.id\r\n\t}\r\n\tpublic isChecked():boolean{\r\n\t\treturn this.isCompleted\r\n\t}\r\n\tpublic setChecked(v:boolean):void{\r\n\t\tthis.isCompleted = v;\r\n\t}\r\n\tpublic getDueDate():Date{\r\n\t\treturn this.dueDate;\r\n\t}\r\n\tpublic getTags():Tag[]{\r\n\t\treturn this.tags\r\n\t}\r\n}\r\n\r\nexport type TodoArray = Todo[];\r\n\r\nexport function todoReducer(\r\n  state: TodoArray = [],\r\n  action: TodoActions\r\n): TodoArray {\r\n  switch (action.type) {\r\n    case ADD:\r\n\t  return [...state, action.payload];\r\n\tcase UPDATE:\r\n\t\treturn state.filter((item) =>{\r\n\t\t\tif(item.getId() === action.payload.getId()){\r\n\t\t\t\titem = action.payload\r\n\t\t\t}\r\n\t\t\treturn item;\r\n\t\t})\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { isArray } from 'lodash';\r\nimport { ADD,TagActions, REMOVE } from './actions';\r\n\r\nexport class Tag {\r\n\tprivate static baseId:number = 0;\r\n\tprivate readonly id:number;\r\n\tconstructor(public title:string, public color: string, public defaultTodo:boolean=true){\r\n\t\tthis.id = ++Tag.baseId;\r\n\t}\r\n\tpublic getId() {\r\n\t\treturn this.id\r\n\t}\r\n}\r\nlet defaultTage = localStorage.getItem('tags')\r\nlet tags: Tag[] = []\r\nif (defaultTage && defaultTage.length > 0) {\r\n    defaultTage = JSON.parse(defaultTage)\r\n    if (isArray(defaultTage)) {\r\n        defaultTage.forEach((item) => {\r\n            tags.push(new Tag(item.title, item.color, item.defaultTodo))\r\n        })\r\n    }\r\n}\r\nif (tags.length === 0) {\r\n    tags = [\r\n        new Tag('work', '#67F4EC'),\r\n        new Tag('Fun', '#67F46D'),\r\n        new Tag('Study', '#F46767'),\r\n        new Tag('Rest', '#E9F467'),\r\n    ]\r\n}\r\nexport const defaultTags = tags;\r\n\r\nexport type TagArray = Tag[];\r\nlet data ;\r\nexport function tagReducer(\r\n  state: TagArray = [],\r\n  action: TagActions\r\n): TagArray {\r\n  switch (action.type) {\r\n    case ADD:\r\n\t  data  = [...state, action.payload];\r\n\t  window.localStorage.setItem('tags', JSON.stringify(data))\r\n\t  return data\r\n\tcase REMOVE:\r\n\t\tdata = state.filter((item) =>{\r\n\t\t\tif(item.getId() === action.payload.getId()){\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn item;\r\n\t\t})\r\n\t \twindow.localStorage.setItem('tags', JSON.stringify(data))\r\n\t\treturn data\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {combineReducers} from 'redux'\r\nimport {todoReducer} from \"./todo\"\r\nimport {tagReducer} from \"./tag\"\r\n\r\nexport const rootState = combineReducers({\r\n\ttodos: todoReducer,\r\n\ttags: tagReducer\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootState>;\r\n","import {Tag} from \"./index\"\r\n\r\ninterface IAction {\r\n\ttype: string\r\n}\r\n\r\nexport const ADD = 'ADD_TAG';\r\ninterface IAddTag extends IAction {\r\n  type: typeof ADD;\r\n  payload: Tag;\r\n}\r\n\r\nexport function AddTag(tag: Tag): IAddTag {\r\n  return {\r\n    type: ADD,\r\n    payload: tag,\r\n  };\r\n}\r\n\r\nexport const REMOVE = 'REMOVE_TAG';\r\ninterface IRemoveTag extends IAction {\r\n  type: typeof REMOVE;\r\n  payload: Tag;\r\n}\r\n\r\nexport function RemoveTag(tag: Tag): IRemoveTag {\r\n  return {\r\n    type: REMOVE,\r\n    payload: tag,\r\n  };\r\n}\r\n\r\nexport type TagActions = IAddTag | IRemoveTag;\r\n","import { CheckCircleOutline } from 'heroicons-react'\r\nimport React from 'react'\r\nimport './logo.css'\r\n\r\nfunction Logo() {\r\n    return (\r\n        <h1 className=\"font-bold text-2xl tracking-normal text-white\">\r\n            Tallyd\r\n            <CheckCircleOutline size={20} className=\"inline-block\" />\r\n        </h1>\r\n    )\r\n}\r\nexport default Logo\r\n","import React from 'react'\r\nimport { CalendarOutline } from 'heroicons-react'\r\nimport dayjs from 'dayjs'\r\nimport 'react-dates/initialize'\r\nimport 'react-dates/lib/css/_datepicker.css'\r\nimport './Dates.css'\r\nimport { DayPicker } from 'react-dates'\r\n\r\nfunction Dates({ onDateChange }: { onDateChange(date: Date): void }) {\r\n    const [selectedDate, setSelectedDate] = React.useState('today')\r\n    const [showCalendar, setShowCalendar] = React.useState(false)\r\n    const [customDate, setCustomDate] = React.useState<Date>()\r\n\r\n    function generateClassName(fieldName: string) {\r\n        let defaultClass =\r\n            'dateTag rounded-md mb-2 text-sm text-white font-bold px-3 py-1 mr-3 opacity-25 cursor-pointer'\r\n        if (fieldName === selectedDate) return defaultClass + ' active'\r\n        else return defaultClass\r\n    }\r\n    return (\r\n        <div>\r\n            <span className=\"text-white block p-2 pl-0 font-bold text-sm\">\r\n                Due Date\r\n            </span>\r\n            <div className=\"flex md:flex-wrap overflow-x-auto overflow-y-hidden hiddenScrollbar\">\r\n                <div\r\n                    className={generateClassName('today') + ' bg-red-500'}\r\n                    onClick={() => {\r\n                        setSelectedDate('today')\r\n                        setCustomDate(undefined)\r\n                        onDateChange(new Date())\r\n                    }}\r\n                >\r\n                    <span>Today</span>\r\n                </div>\r\n                <div\r\n                    className={generateClassName('tomorrow') + ' bg-indigo-500'}\r\n                    onClick={() => {\r\n                        setSelectedDate('tomorrow')\r\n                        setCustomDate(undefined)\r\n                        onDateChange(dayjs().add(1, 'day').toDate())\r\n                    }}\r\n                >\r\n                    <span>Tomorrow</span>\r\n                </div>\r\n                <div\r\n                    className={\r\n                        generateClassName('customDate') + ' bg-yellow-600 flex'\r\n                    }\r\n                    onClick={() => {\r\n                        setSelectedDate('customDate')\r\n                        setShowCalendar(true)\r\n                    }}\r\n                >\r\n                    <CalendarOutline size={19} />\r\n                    {customDate && (\r\n                        <span className=\"ml-1\">\r\n                            {dayjs(customDate).format('DD-MM-YYYY')}\r\n                        </span>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            {showCalendar && (\r\n                <div className=\"relative mt-1 calendar\">\r\n                    <div className=\"calendar -mt-32 absolute z-50 w-full flex justify-center items-center\">\r\n                        <DayPicker\r\n                            numberOfMonths={1}\r\n                            onDayClick={(e) => {\r\n                                setSelectedDate('customDate')\r\n                                setCustomDate(e.toDate())\r\n                                onDateChange(e.toDate())\r\n                                setShowCalendar(false)\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dates\r\n","import React from 'react'\r\nimport { PlusOutline, CheckOutline, TrashOutline } from 'heroicons-react'\r\nimport { TwitterPicker } from 'react-color'\r\nimport { RootState } from '../../store'\r\nimport { AddTag, RemoveTag } from '../../store/tag/actions'\r\nimport { Tag, TagArray } from '../../store/tag'\r\nimport { connect } from 'react-redux'\r\nimport './Tags.css'\r\n\r\ntype Props = {\r\n    onTagAdd(tag: Tag): void\r\n    onTagRemove(tag: Tag): void\r\n    AddTag: typeof AddTag\r\n    RemoveTag: typeof RemoveTag\r\n    tags: TagArray\r\n}\r\nconst mapStateToProps = ({ tags }: RootState) => {\r\n    return { tags }\r\n}\r\nconst mapDispatchToProps = { AddTag, RemoveTag }\r\n\r\nfunction Tags({ onTagAdd, onTagRemove, tags, AddTag, RemoveTag }: Props) {\r\n    const [selectedTag, setSelectedTag] = React.useState<string[]>([])\r\n    const [showAddInput, setShowAddInput] = React.useState<boolean>(false)\r\n    const [customColor, setCustomColor] = React.useState<string>('#8ED1FC')\r\n    const [tagTitle, setTagTitle] = React.useState('')\r\n\r\n    function generateClassName(tagName: string) {\r\n        let defaultClass =\r\n            'tag rounded-md mb-2 flex self-start text-sm items-center text-black-blue font-bold px-3 py-1 mr-3 opacity-25 cursor-pointer'\r\n        if (selectedTag.includes(tagName)) return defaultClass + ' active'\r\n        else return defaultClass\r\n    }\r\n    function selectTag(tag: Tag): void {\r\n        if (tag.title.length > 0) {\r\n            let tags = [...selectedTag]\r\n            if (tags.includes(tag.title)) {\r\n                tags = tags.filter((tagName) => tagName !== tag.title)\r\n                onTagRemove(tag)\r\n            } else {\r\n                tags.push(tag.title)\r\n                onTagAdd(tag)\r\n            }\r\n            setSelectedTag(tags)\r\n        }\r\n    }\r\n    const submitTodo = () => {\r\n        if (tagTitle.length > 0) {\r\n            let tag = new Tag(tagTitle, customColor, false)\r\n            AddTag(tag)\r\n            selectTag(tag)\r\n        }\r\n        setTagTitle('')\r\n        setShowAddInput(false)\r\n    }\r\n    return (\r\n        <div>\r\n            <span className=\"text-white block p-2 pl-0 font-bold text-sm\">\r\n                Tags\r\n            </span>\r\n            <div className=\"flex md:flex-wrap overflow-x-auto overflow-y-hidden hiddenScrollbar\">\r\n                {tags.map((tag, index) => {\r\n                    return (\r\n                        <div\r\n                            key={tag.title + index}\r\n                            className={generateClassName(tag.title)}\r\n                            style={{\r\n                                backgroundColor: tag.color,\r\n                            }}\r\n                            onClick={() => {\r\n                                selectTag(tag)\r\n                            }}\r\n                        >\r\n                            <span>{tag.title}</span>\r\n                            {!tag.defaultTodo && (\r\n                                <div\r\n                                    className=\"removeTodoAction cursor-pointer\"\r\n                                    onClick={() => {\r\n                                        onTagRemove(tag)\r\n                                        RemoveTag(tag)\r\n                                    }}\r\n                                >\r\n                                    <TrashOutline size={18} />\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    )\r\n                })}\r\n                {showAddInput && (\r\n                    <div>\r\n                        <div\r\n                            className={\r\n                                generateClassName('customDate') +\r\n                                ' bg-white flex active '\r\n                            }\r\n                            onClick={() => {}}\r\n                        >\r\n                            <div\r\n                                className=\"colorpicker w-6 h-6 rounded-md\"\r\n                                style={{ backgroundColor: customColor }}\r\n                            ></div>\r\n                            <input\r\n                                className=\"mx-2 text-sm bg-transparent font-bold color-black-blue focus:outline-none\"\r\n                                type=\"text\"\r\n                                placeholder=\"write tag title\"\r\n                                onChange={(e) => {\r\n                                    setTagTitle(e.currentTarget.value)\r\n                                }}\r\n                                onKeyUp={(e) => {\r\n                                    if (e.key === 'Enter') {\r\n                                        submitTodo()\r\n                                    }\r\n                                }}\r\n                            />\r\n                            <div\r\n                                className=\"colorpicker w-6 h-6 rounded-md border border-gray-500 color-gray-500\"\r\n                                onClick={submitTodo}\r\n                            >\r\n                                <CheckOutline\r\n                                    className=\"stroke-current text-gray-700\"\r\n                                    size={22}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <TwitterPicker\r\n                            color={customColor}\r\n                            onChangeComplete={(color) => {\r\n                                setCustomColor(color.hex)\r\n                            }}\r\n                        />\r\n                    </div>\r\n                )}\r\n                <div\r\n                    className={\r\n                        'dateTag rounded-md mb-2 self-start text-sm text-gray-300 font-bold px-2 py-1 mr-2 opacity-50 cursor-pointer bg-gray-400 bg-opacity-25 flex'\r\n                    }\r\n                    onClick={() => {\r\n                        setShowAddInput(true)\r\n                    }}\r\n                >\r\n                    <PlusOutline size={19} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Tags)\r\n","import { ArrowNarrowRight, ViewListOutline } from 'heroicons-react'\r\nimport React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Todo } from '../../store/todo'\r\nimport { AddTodo } from '../../store/todo/actions'\r\nimport Logo from '../logo'\r\nimport Dates from './Dates'\r\nimport Tags from './Tags'\r\nimport { Tag } from '../../store/tag'\r\nimport { clone } from 'lodash'\r\nconst mapDispatchToProps = { AddTodo }\r\n\r\ntype Props = {\r\n    AddTodo: typeof AddTodo\r\n    onTimelineControllerClicked(): void\r\n}\r\nlet selectedDate = new Date()\r\nlet tags: Tag[] = []\r\nfunction TodoAdder({ AddTodo, onTimelineControllerClicked }: Props) {\r\n    const titleInput = React.createRef<HTMLInputElement>()\r\n    const [value, setValue] = React.useState('')\r\n\r\n    const addTodoHandler = (): void => {\r\n        if (value.trim().length > 0) {\r\n            AddTodo(new Todo(value, '', selectedDate, tags))\r\n            tags = clone(tags)\r\n            setValue('')\r\n            titleInput.current!.value = ''\r\n        }\r\n    }\r\n\r\n    const onTodoTitleChanged = (\r\n        e: React.ChangeEvent<HTMLInputElement>\r\n    ): void => {\r\n        setValue(e.target.value)\r\n    }\r\n    const onTodoTitleKeyUp = (\r\n        e: React.KeyboardEvent<HTMLInputElement>\r\n    ): void => {\r\n        if (e.key === 'Enter') {\r\n            addTodoHandler()\r\n        }\r\n    }\r\n    const onDateChange = (date: Date): void => {\r\n        selectedDate = date\r\n    }\r\n    const onTagAdd = (tag: Tag): void => {\r\n        if (tags.includes(tag) === false) tags.push(tag)\r\n    }\r\n    const onTagRemove = (tag: Tag): void => {\r\n        tags = tags.filter(\r\n            (t) => !(t.title === tag.title && t.color === tag.color)\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"p-5 md:w-1/2 relative\">\r\n            <div className=\"flex justify-between\">\r\n                <Logo />\r\n                <div\r\n                    className=\"md:hidden visible bg-gray-400 bg-opacity-25 p-2 rounded-md cursor-pointer\"\r\n                    onClick={onTimelineControllerClicked}\r\n                >\r\n                    <ViewListOutline className=\"text-gray-300 \" />\r\n                </div>\r\n            </div>\r\n            <h2 className=\"md:text-3xl text-2xl font-bold text-white lg:mt-10 mt-5\">\r\n                What’s you plan to do?\r\n            </h2>\r\n            <p className=\"text-gray-500 font-medium text-sm lg:mt-2 mt-1\">\r\n                Add you plan, so you never forget the works!\r\n            </p>\r\n            <div className=\"inputfields mt-8\">\r\n                <input\r\n                    ref={titleInput}\r\n                    type=\"text\"\r\n                    className=\"px-4 py-3 rounded-md font bg-white bg-opacity-25 text-gray-100 w-full focus:outline-none placeholder-gray-400\"\r\n                    placeholder=\"Shopping...?!\"\r\n                    onChange={onTodoTitleChanged}\r\n                    onKeyUp={onTodoTitleKeyUp}\r\n                />\r\n            </div>\r\n            <div className=\"mt-5\">\r\n                <Dates onDateChange={onDateChange} />\r\n            </div>\r\n            <div className=\"mt-5\">\r\n                <Tags onTagAdd={onTagAdd} onTagRemove={onTagRemove} />\r\n            </div>\r\n            <div className=\"flex flex-row-reverse w-full mt-4\">\r\n                <button\r\n                    onClick={addTodoHandler}\r\n                    className=\"add font-bold flex text-gray-800 px-3 py-1 rounded-md bg-white focus:outline-none\"\r\n                >\r\n                    Add\r\n                    <ArrowNarrowRight className=\"ml-1\" />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(TodoAdder)\r\n","import { Check } from 'heroicons-react'\r\nimport React from 'react'\r\nimport { Todo } from '../../store/todo/index'\r\nimport './TodoItem.css'\r\n\r\nfunction TodoItem({\r\n    todo,\r\n    onTodoCheck,\r\n}: {\r\n    todo: Todo\r\n    onTodoCheck(t: Todo): void\r\n}) {\r\n    let className =\r\n        'todo-item mb-2 text-black-blue p-2 rounded-md flex justify-between select-none  cursor-pointer bg-active-todo'\r\n\r\n    let todoCheckBoxClassName = 'circle border-2 rounded-full  bg-whtie'\r\n\r\n    let todoTitleClassName = 'ml-2 font-medium'\r\n    if (todo.isChecked()) {\r\n        className += ' bg-opacity-25 done-todo opacity-75'\r\n        todoCheckBoxClassName += ' border-green-400 text-green-400'\r\n        todoTitleClassName += ' text-green-400 line-through'\r\n    } else {\r\n        todoCheckBoxClassName += '  border-black-blue'\r\n    }\r\n\r\n    return (\r\n        <div\r\n            onClick={() => {\r\n                onTodoCheck(todo)\r\n            }}\r\n            className={className}\r\n        >\r\n            <div\r\n                className=\"flex items-center \"\r\n                style={{\r\n                    maxWidth:\r\n                        todo.getTags().length > 0\r\n                            ? todo.getTitle().length > 20\r\n                                ? '75%'\r\n                                : '55%'\r\n                            : '100%',\r\n                }}\r\n            >\r\n                <div className={todoCheckBoxClassName}>\r\n                    {todo.isChecked() && <Check size={14} />}\r\n                </div>\r\n                <span className={todoTitleClassName + ' w-full truncate'}>\r\n                    {todo.getTitle()}\r\n                </span>\r\n            </div>\r\n            <div\r\n                className=\"hiddenScrollbar\"\r\n                style={{\r\n                    maxWidth: todo.getTitle().length > 20 ? '25%' : '45%',\r\n                    overflowX: 'scroll',\r\n                }}\r\n            >\r\n                {todo.getTags().map((tag) => {\r\n                    return (\r\n                        <span\r\n                            key={tag.getId()}\r\n                            className=\"ml-1 px-2 py-1 rounded-md font-bold text-sm\"\r\n                            style={{ backgroundColor: tag.color }}\r\n                        >\r\n                            {tag.title}\r\n                        </span>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoItem\r\n","import React, { forwardRef } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { UpdateTodo } from '../../store/todo/actions'\r\nimport { Todo } from '../../store/todo/index'\r\nimport TodoItem from './TodoItem'\r\nimport customParseFormat from 'dayjs/plugin/customParseFormat'\r\nimport isToday from 'dayjs/plugin/isToday'\r\nimport isTomorrow from 'dayjs/plugin/isTomorrow'\r\nimport dayjs from 'dayjs'\r\nimport { sortBy, zipObject } from 'lodash'\r\nimport FlipMove from 'react-flip-move'\r\n\r\ndayjs.extend(customParseFormat)\r\ndayjs.extend(isToday)\r\ndayjs.extend(isTomorrow)\r\nconst mapStateToProps = null\r\n\r\nconst mapDispatchToProps = { UpdateTodo }\r\n\r\ntype todoGroups = {\r\n    [key: string]: Todo[]\r\n}\r\n\r\ntype Props = {\r\n    UpdateTodo: typeof UpdateTodo\r\n    groups: todoGroups\r\n}\r\n\r\nfunction TodoGroup({ groups, UpdateTodo }: Props) {\r\n    // sort object keys by date\r\n    var keys = sortBy(Object.keys(groups), (key) => {\r\n        return dayjs(key, 'DD-MM-YYYY').toDate()\r\n    })\r\n\r\n    // remake object with sorted keys\r\n    let clonedGroups = zipObject(\r\n        keys,\r\n        keys.map((item) => groups[item])\r\n    )\r\n    groups = clonedGroups\r\n\r\n    // sort by alphabet\r\n    Object.keys(groups).forEach((key) => {\r\n        groups[key] = sortBy(groups[key], (item) => {\r\n            return item.getTitle()\r\n        })\r\n    })\r\n\r\n    // Sort by done/undone todos\r\n    Object.keys(groups).forEach((key) => {\r\n        groups[key] = sortBy(groups[key], (item) => {\r\n            return item.isChecked()\r\n        })\r\n    })\r\n\r\n    const todoCheckedHandler = (item: Todo): void => {\r\n        let v: boolean = true\r\n        if (item.isChecked()) {\r\n            v = false\r\n        }\r\n        item.setChecked(v)\r\n\r\n        UpdateTodo(item)\r\n    }\r\n    type ppp = {\r\n        todo: Todo\r\n        onTodoCheck(t: Todo): void\r\n    }\r\n    const FunctionalTodoItem = forwardRef((props: ppp, ref: any) => (\r\n        <div ref={ref}>\r\n            <TodoItem onTodoCheck={props.onTodoCheck} todo={props.todo} />\r\n        </div>\r\n    ))\r\n\r\n    const groupTodos = (todos: Todo[]) => {\r\n        return todos.map((item) => {\r\n            return (\r\n                <FunctionalTodoItem\r\n                    onTodoCheck={todoCheckedHandler}\r\n                    todo={item}\r\n                    key={item.getId()}\r\n                />\r\n            )\r\n        })\r\n    }\r\n    const parseGroupName = (groupName: string): string => {\r\n        const d = dayjs(groupName, 'DD-MM-YYYY')\r\n\r\n        if (d.isToday()) return 'Today'\r\n        if (d.isTomorrow()) return 'Tomorrow'\r\n        if (d.year() === dayjs().year()) return d.format('ddd, D MMM')\r\n        else return d.format('ddd, D MMM, YYYY')\r\n    }\r\n\r\n    return (\r\n        <div className=\"todo-groups\">\r\n            <FlipMove\r\n                staggerDurationBy=\"30\"\r\n                duration={200}\r\n                appearAnimation=\"accordionVertical\"\r\n                enterAnimation=\"accordionVertical\"\r\n                leaveAnimation=\"accordionVertical\"\r\n            >\r\n                {Object.keys(groups).map((groupName: string) => {\r\n                    return (\r\n                        <div className=\"todoGroup mb-10\" key={groupName}>\r\n                            <span className=\"mb-2 block font-bold\">\r\n                                {parseGroupName(groupName)}\r\n                            </span>\r\n                            <FlipMove\r\n                                staggerDurationBy=\"30\"\r\n                                duration={200}\r\n                                appearAnimation=\"accordionVertical\"\r\n                                enterAnimation=\"accordionVertical\"\r\n                                leaveAnimation=\"accordionVertical\"\r\n                            >\r\n                                {groupTodos(groups[groupName])}\r\n                            </FlipMove>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </FlipMove>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoGroup)\r\n","import { groupBy } from 'lodash'\r\nimport React, { forwardRef } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { RootState } from '../../store'\r\nimport { Todo, TodoArray } from '../../store/todo'\r\nimport { UpdateTodo } from '../../store/todo/actions'\r\nimport TodoGroup from './TodoGroup'\r\nimport dayjs from 'dayjs'\r\nconst mapStateToProps = ({ todos }: RootState) => {\r\n    return { todos }\r\n}\r\n\r\nconst mapDispatchToProps = { UpdateTodo }\r\n\r\ntype Props = {\r\n    todos: TodoArray\r\n    forwardedRef: any\r\n}\r\nlet isDragging = false\r\nlet openStyle = { top: '50px' }\r\nlet opened = true\r\nlet policy = 0\r\n\r\nlet closeStyle = () => {\r\n    return {\r\n        top: window.innerHeight - 60 + 'px',\r\n    }\r\n}\r\n\r\nfunction TodoList({ todos, forwardedRef }: Props) {\r\n    console.log(forwardedRef)\r\n    const groups = groupBy(todos, (todo: Todo) =>\r\n        dayjs(todo.getDueDate()).format('DD-MM-YYYY')\r\n    )\r\n    const [style, setStyle] = React.useState<any>(openStyle)\r\n\r\n    const dragStart = (e: any) => {\r\n        isDragging = true\r\n        policy = e.touches[0].screenY - parseInt(style.top)\r\n    }\r\n    const onDragging = (e: any): void => {\r\n        console.log(e)\r\n        if (isDragging)\r\n            setStyle({\r\n                top: e.touches[0].screenY - policy + 'px',\r\n            })\r\n    }\r\n\r\n    const onDragEnd = (): void => {\r\n        if (isDragging) {\r\n            isDragging = false\r\n            if (!opened)\r\n                if (\r\n                    parseInt(style.top) <\r\n                    window.innerHeight / 2 + window.innerHeight / 4\r\n                ) {\r\n                    openTimeline()\r\n                } else {\r\n                    closeTimeline()\r\n                }\r\n            else if (parseInt(style.top) > window.innerHeight / 4) {\r\n                closeTimeline()\r\n            } else {\r\n                openTimeline()\r\n            }\r\n            policy = 0\r\n        }\r\n    }\r\n    const openTimeline = (): void => {\r\n        opened = true\r\n        setStyle(openStyle)\r\n    }\r\n    const closeTimeline = (): void => {\r\n        opened = false\r\n        setStyle(closeStyle())\r\n    }\r\n    const mouseHandler = (): void => {\r\n        if (!opened) openTimeline()\r\n        else closeTimeline()\r\n    }\r\n    forwardedRef.current = mouseHandler\r\n    return (\r\n        <div\r\n            className=\"md:w-1/2 w-full md:static timeline absolute transition-all duration-200 ease-out\"\r\n            style={style}\r\n        >\r\n            <div className=\" h-full p-5 \">\r\n                <div className=\" rounded-2xl md:pt-10 h-full bg-white\">\r\n                    <div\r\n                        className=\"line visible md:hidden mb-4 pt-4 pb-4\"\r\n                        onTouchStart={dragStart}\r\n                        onTouchMove={onDragging}\r\n                        onTouchEnd={onDragEnd}\r\n                        onMouseDown={mouseHandler}\r\n                    >\r\n                        <div className=\"w-20 rounded-md bg-gray-500 h-2 m-auto \"></div>\r\n                    </div>\r\n                    <div className=\"p-1 pr-10 pl-10 pb-10\">\r\n                        <h2 className=\"text-black-blue font-bold text-2xl\">\r\n                            Timeline\r\n                        </h2>\r\n                        <p className=\"mt-2 text-gray-500 text-sm\">\r\n                            “It's time to start living the life you've imagined”\r\n                            <span className=\"text-xs\">- Henry James</span>\r\n                        </p>\r\n                        <div className=\"list mt-5\">\r\n                            <TodoGroup groups={groups} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Comp = connect(mapStateToProps, mapDispatchToProps)(TodoList)\r\n\r\nexport default forwardRef((props, ref: any) => {\r\n    return <Comp {...props} forwardedRef={ref} />\r\n})\r\n","import React from 'react'\r\nimport './App.css'\r\nimport TodoAdder from './components/TodoAdder'\r\nimport TodoList from './components/TodoList'\r\n\r\nfunction App() {\r\n    const todoListRef = React.useRef<any>()\r\n    setTimeout(() => {\r\n        console.log(todoListRef)\r\n    })\r\n    const onTimelineControllerClicked = () => {\r\n        todoListRef.current()\r\n    }\r\n    return (\r\n        <div className=\"App md:flex bg-black-blue h-full md:justify-between\">\r\n            <TodoAdder\r\n                onTimelineControllerClicked={onTimelineControllerClicked}\r\n            />\r\n            <TodoList ref={todoListRef} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);  \r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n}\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react'\r\nimport reactDom from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { compose, createStore } from 'redux'\r\nimport { rootState } from './store'\r\nimport App from './App'\r\nimport './index.css'\r\nimport reportWebVitals from './reportWebVitals'\r\n\r\nimport { defaultTags } from './store/tag/index'\r\n\r\nconst composeEnhancers =\r\n    ((window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\r\n        (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()) ||\r\n    compose\r\n\r\nconst store = createStore(\r\n    rootState,\r\n    {\r\n        todos: [],\r\n        tags: defaultTags,\r\n    },\r\n    composeEnhancers\r\n)\r\n\r\nreactDom.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n)\r\n\r\nreportWebVitals()\r\n"],"sourceRoot":""}