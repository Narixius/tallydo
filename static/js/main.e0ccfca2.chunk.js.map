{"version":3,"sources":["store/todo/actions.ts","store/tag/index.ts","store/todo/index.ts","store/index.ts","store/tag/actions.ts","components/logo.tsx","components/TodoAdder/Dates.tsx","components/TodoAdder/Tags.tsx","components/TodoAdder/index.tsx","components/TodoList/TodoItem.tsx","components/TodoList/TodoGroup.tsx","components/TodoList/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ADD","UpdateTodo","todo","type","payload","Tag","title","color","defaultTodo","id","this","baseId","defaultTage","localStorage","getItem","tags","length","JSON","parse","isArray","forEach","item","push","data","defaultTags","Todo","description","dueDate","isCompleted","v","todos","map","tag","dayjs","toDate","setChecked","defaultTodos","rootState","combineReducers","state","action","window","setItem","stringify","filter","getId","Logo","className","size","generateClassName","isActive","defaultClass","extend","isToday","Dates","onDateChange","React","useState","selectedDate","setSelectedDate","showCalendar","setShowCalendar","customDate","setCustomDate","selectDate","date","undefined","onClick","Date","add","format","numberOfMonths","onDayClick","e","renderDayContents","day","mapDispatchToProps","AddTag","RemoveTag","connect","onTagAdd","onTagRemove","selectedTag","setSelectedTag","showAddInput","setShowAddInput","customColor","setCustomColor","tagTitle","setTagTitle","tagName","includes","selectTag","submitTodo","index","key","style","backgroundColor","placeholder","onChange","currentTarget","value","onKeyUp","onChangeComplete","hex","AddTodo","placeholders","onTimelineControllerClicked","titleInput","createRef","setValue","sample","setPlaceholder","addTodoHandler","trim","clone","current","ref","target","t","RemoveTodo","memo","onTodoCheck","showMenu","setShowMenu","todoCheckBoxClassName","todoTitleClassName","isChecked","uListRef","useRef","useEffect","handleClick","contains","document","addEventListener","removeEventListener","todoContentStyle","maxWidth","getTags","getTitle","todoTagsStyle","dropDownMenu","TransitionGroup","CSSTransition","timeout","classNames","stopPropagation","tagElement","prevProps","nextProps","isEqual","customParseFormat","isTomorrow","groups","keys","sortBy","Object","clonedGroups","zipObject","todoCheckedHandler","FunctionalTodoItem","forwardRef","props","staggerDurationBy","duration","appearAnimation","enterAnimation","leaveAnimation","groupName","d","year","parseGroupName","isDragging","openStyle","top","opened","policy","Comp","forwardedRef","groupBy","getDueDate","setStyle","openTimeline","closeTimeline","innerHeight","mouseHandler","emptyTodoDialog","onTouchStart","touches","screenY","parseInt","onTouchMove","onTouchEnd","onMouseDown","App","todoListRef","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reactDom","render","getElementById"],"mappings":"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","file":"static/js/main.e0ccfca2.chunk.js","sourcesContent":["import {Todo} from \"./index\"\r\n\r\ninterface IAction {\r\n\ttype: string\r\n}\r\n\r\nexport const ADD = 'ADD_TODO';\r\ninterface IAddTodo extends IAction {\r\n  type: typeof ADD;\r\n  payload: Todo;\r\n}\r\n\r\nexport function AddTodo(todo: Todo): IAddTodo {\r\n  return {\r\n    type: ADD,\r\n    payload: todo,\r\n  };\r\n}\r\n\r\nexport const UPDATE = 'UPDATE_TODO';\r\ninterface IUpdateTodo extends IAction {\r\n  type: typeof UPDATE;\r\n  payload: Todo;\r\n}\r\n\r\nexport function UpdateTodo(todo: Todo): IUpdateTodo {\r\n  return {\r\n    type: UPDATE,\r\n    payload: todo,\r\n  };\r\n}\r\n\r\nexport const REMOVE = 'REMOVE_TODO';\r\ninterface IRemoveTodo extends IAction {\r\n  type: typeof REMOVE;\r\n  payload: Todo;\r\n}\r\n\r\nexport function RemoveTodo(todo: Todo): IRemoveTodo {\r\n  return {\r\n    type: REMOVE,\r\n    payload: todo,\r\n  };\r\n}\r\n\r\nexport type TodoActions = IAddTodo | IUpdateTodo | IRemoveTodo;\r\n","import { isArray } from 'lodash';\r\nimport { ADD,TagActions, REMOVE } from './actions';\r\n\r\nexport class Tag {\r\n\tprivate static baseId:number = 0;\r\n\tprivate readonly id:number;\r\n\tconstructor(public title:string, public color: string, public defaultTodo:boolean=true){\r\n\t\tthis.id = ++Tag.baseId;\r\n\t}\r\n\tpublic getId() {\r\n\t\treturn this.id\r\n\t}\r\n}\r\nlet defaultTage = localStorage.getItem('tags')\r\nlet tags: Tag[] = []\r\nif (defaultTage && defaultTage.length > 0) {\r\n    defaultTage = JSON.parse(defaultTage)\r\n    if (isArray(defaultTage)) {\r\n        defaultTage.forEach((item) => {\r\n            tags.push(new Tag(item.title, item.color, item.defaultTodo))\r\n        })\r\n    }\r\n}\r\nif (tags.length === 0) {\r\n    tags = [\r\n        new Tag('work', '#67F4EC'),\r\n        new Tag('Fun', '#67F46D'),\r\n        new Tag('Study', '#F46767'),\r\n        new Tag('Rest', '#E9F467'),\r\n    ]\r\n}\r\nexport const defaultTags = tags;\r\n\r\nexport type TagArray = Tag[];\r\nlet data ;\r\nexport function tagReducer(\r\n  state: TagArray = [],\r\n  action: TagActions\r\n): TagArray {\r\n  switch (action.type) {\r\n    case ADD:\r\n\t  data  = [...state, action.payload];\r\n\t  window.localStorage.setItem('tags', JSON.stringify(data))\r\n\t  return data\r\n\tcase REMOVE:\r\n\t\tdata = state.filter((item) =>{\r\n\t\t\tif(item.getId() === action.payload.getId()){\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn item;\r\n\t\t})\r\n\t \twindow.localStorage.setItem('tags', JSON.stringify(data))\r\n\t\treturn data\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { ADD,TodoActions, UPDATE, REMOVE } from './actions';\r\nimport {Tag} from \"../tag\"\r\nimport { isArray } from 'lodash';\r\nimport dayjs from 'dayjs';\r\nexport class Todo {\r\n\tprivate static baseId:number = 0;\r\n\tprivate readonly id:number;\r\n\tprivate isCompleted:boolean;\r\n\tconstructor(private title:string, private description: string, private dueDate: Date, private tags: Tag[]){\r\n\t\tthis.id = ++Todo.baseId;\r\n\t\tthis.isCompleted = false\r\n\t}\r\n\tpublic getTitle():string{\r\n\t\treturn this.title;\r\n\t}\r\n\tpublic getId():number{\r\n\t\treturn this.id\r\n\t}\r\n\tpublic isChecked():boolean{\r\n\t\treturn this.isCompleted\r\n\t}\r\n\tpublic setChecked(v:boolean):void{\r\n\t\tthis.isCompleted = v;\r\n\t}\r\n\tpublic getDueDate():Date{\r\n\t\treturn this.dueDate;\r\n\t}\r\n\tpublic getTags():Tag[]{\r\n\t\treturn this.tags\r\n\t}\r\n}\r\n\r\nexport type TodoArray = Todo[];\r\n\r\n\r\n\r\nlet defaultTodo = localStorage.getItem('todos')\r\nlet todos: Todo[] = []\r\nif (defaultTodo && defaultTodo.length > 0) {\r\n    defaultTodo = JSON.parse(defaultTodo)\r\n    if (isArray(defaultTodo)) {\r\n        defaultTodo.forEach((item) => {\r\n\t\t\tconst tags:Tag[] = item.tags.map((tag:any) =>{\r\n\t\t\t\treturn new Tag(tag.title, tag.color, tag.defaultTodo)\r\n\t\t\t})\r\n\t\t\tlet todo = new Todo(item.title, item.description, dayjs(item.dueDate).toDate(), tags);\r\n\t\t\ttodo.setChecked(item.isCompleted)\r\n            todos.push(todo);\r\n        })\r\n    }\r\n}\r\nexport const defaultTodos = todos;\r\n\r\n\r\n\r\nexport function todoReducer(\r\n  state: TodoArray = [],\r\n  action: TodoActions\r\n): TodoArray {\r\n\tlet todos = [];\r\n  switch (action.type) {\r\n    case ADD:\r\n\t\ttodos = [...state, action.payload];\r\n\t\twindow.localStorage.setItem('todos', JSON.stringify(todos))\r\n\t\treturn todos;\r\n\tcase UPDATE:\r\n\t\ttodos =  state.filter((item) =>{\r\n\t\t\tif(item.getId() === action.payload.getId()){\r\n\t\t\t\titem = action.payload\r\n\t\t\t}\r\n\t\t\treturn item;\r\n\t\t})\r\n\t\twindow.localStorage.setItem('todos', JSON.stringify(todos))\r\n\t\treturn todos;\r\n\t\tcase REMOVE:\r\n\t\ttodos = state.filter((item) =>{\r\n\t\t\tif(item.getId()!== action.payload.getId()){\r\n\t\t\t\treturn item;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t})\r\n\t\twindow.localStorage.setItem('todos', JSON.stringify(todos))\r\n\t\treturn todos;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {combineReducers} from 'redux'\r\nimport {todoReducer} from \"./todo\"\r\nimport {tagReducer} from \"./tag\"\r\n\r\nexport const rootState = combineReducers({\r\n\ttodos: todoReducer,\r\n\ttags: tagReducer\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootState>;\r\n","import {Tag} from \"./index\"\r\n\r\ninterface IAction {\r\n\ttype: string\r\n}\r\n\r\nexport const ADD = 'ADD_TAG';\r\ninterface IAddTag extends IAction {\r\n  type: typeof ADD;\r\n  payload: Tag;\r\n}\r\n\r\nexport function AddTag(tag: Tag): IAddTag {\r\n  return {\r\n    type: ADD,\r\n    payload: tag,\r\n  };\r\n}\r\n\r\nexport const REMOVE = 'REMOVE_TAG';\r\ninterface IRemoveTag extends IAction {\r\n  type: typeof REMOVE;\r\n  payload: Tag;\r\n}\r\n\r\nexport function RemoveTag(tag: Tag): IRemoveTag {\r\n  return {\r\n    type: REMOVE,\r\n    payload: tag,\r\n  };\r\n}\r\n\r\nexport type TagActions = IAddTag | IRemoveTag;\r\n","import { CheckCircleOutline } from 'heroicons-react'\r\nimport React from 'react'\r\nimport './logo.css'\r\n\r\nfunction Logo() {\r\n    return (\r\n        <h1 className=\"font-bold text-2xl tracking-normal text-white\">\r\n            Tallyd\r\n            <CheckCircleOutline size={20} className=\"inline-block\" />\r\n        </h1>\r\n    )\r\n}\r\nexport default Logo\r\n","import React from 'react'\r\nimport { CalendarOutline } from 'heroicons-react'\r\nimport dayjs from 'dayjs'\r\nimport 'react-dates/initialize'\r\nimport 'react-dates/lib/css/_datepicker.css'\r\nimport './Dates.css'\r\nimport { DayPicker } from 'react-dates'\r\nimport isToday from 'dayjs/plugin/isToday'\r\ndayjs.extend(isToday)\r\n\r\nfunction generateClassName(isActive: boolean) {\r\n    let defaultClass =\r\n        'dateTag rounded-md mb-2 text-sm text-white font-bold px-3 py-1 mr-3 opacity-25 cursor-pointer'\r\n    if (isActive) return defaultClass + ' active'\r\n    else return defaultClass\r\n}\r\nfunction Dates({ onDateChange }: { onDateChange(date: Date): void }) {\r\n    const [selectedDate, setSelectedDate] = React.useState('today')\r\n    const [showCalendar, setShowCalendar] = React.useState(false)\r\n    const [customDate, setCustomDate] = React.useState<Date>()\r\n\r\n    const selectDate = (date: Date, state: string) => {\r\n        setSelectedDate(state)\r\n        setCustomDate(undefined)\r\n        onDateChange(date)\r\n    }\r\n    const selectingCustomDate = () => {\r\n        setSelectedDate('customDate')\r\n        setShowCalendar(true)\r\n    }\r\n    return (\r\n        <div>\r\n            <span className=\"text-white block p-2 pl-0 font-bold text-sm\">\r\n                Due Date\r\n            </span>\r\n            <div className=\"flex md:flex-wrap overflow-x-auto overflow-y-hidden hiddenScrollbar\">\r\n                <div\r\n                    className={\r\n                        generateClassName('today' === selectedDate) +\r\n                        ' bg-red-500'\r\n                    }\r\n                    onClick={() => selectDate(new Date(), 'today')}\r\n                >\r\n                    <span>Today</span>\r\n                </div>\r\n                <div\r\n                    className={\r\n                        generateClassName('tomorrow' === selectedDate) +\r\n                        ' bg-indigo-500'\r\n                    }\r\n                    onClick={() =>\r\n                        selectDate(dayjs().add(1, 'day').toDate(), 'tomorrow')\r\n                    }\r\n                >\r\n                    <span>Tomorrow</span>\r\n                </div>\r\n                <div\r\n                    className={\r\n                        generateClassName('customDate' === selectedDate) +\r\n                        ' bg-yellow-600 flex'\r\n                    }\r\n                    onClick={selectingCustomDate}\r\n                >\r\n                    <CalendarOutline size={19} />\r\n                    {customDate && (\r\n                        <span className=\"ml-1 customDate\">\r\n                            {dayjs(customDate).format('DD-MM-YYYY')}\r\n                        </span>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            {showCalendar && (\r\n                <div className=\"relative mt-1 calendar\">\r\n                    <div className=\"calendar -mt-32 absolute z-50 w-full flex justify-center items-center\">\r\n                        <DayPicker\r\n                            numberOfMonths={1}\r\n                            onDayClick={(e) => {\r\n                                setSelectedDate('customDate')\r\n                                setCustomDate(e.toDate())\r\n                                onDateChange(e.toDate())\r\n                                setShowCalendar(false)\r\n                            }}\r\n                            renderDayContents={(day) =>\r\n                                dayjs(day.toDate()).isToday() ? (\r\n                                    <span className=\"isToday\">\r\n                                        {day.format('D')}\r\n                                    </span>\r\n                                ) : (\r\n                                    day.format('D')\r\n                                )\r\n                            }\r\n                        />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dates\r\n","import React from 'react'\r\nimport { PlusOutline, CheckOutline, TrashOutline } from 'heroicons-react'\r\nimport { TwitterPicker } from 'react-color'\r\nimport { RootState } from '../../store'\r\nimport { AddTag, RemoveTag } from '../../store/tag/actions'\r\nimport { Tag, TagArray } from '../../store/tag'\r\nimport { connect } from 'react-redux'\r\nimport './Tags.css'\r\n\r\ntype Props = {\r\n    onTagAdd(tag: Tag): void\r\n    onTagRemove(tag: Tag): void\r\n    AddTag: typeof AddTag\r\n    RemoveTag: typeof RemoveTag\r\n    tags: TagArray\r\n}\r\nconst mapStateToProps = ({ tags }: RootState) => {\r\n    return { tags }\r\n}\r\nconst mapDispatchToProps = { AddTag, RemoveTag }\r\n\r\nfunction Tags({ onTagAdd, onTagRemove, tags, AddTag, RemoveTag }: Props) {\r\n    const [selectedTag, setSelectedTag] = React.useState<string[]>([])\r\n    const [showAddInput, setShowAddInput] = React.useState<boolean>(false)\r\n    const [customColor, setCustomColor] = React.useState<string>('#8ED1FC')\r\n    const [tagTitle, setTagTitle] = React.useState('')\r\n\r\n    function generateClassName(tagName: string) {\r\n        let defaultClass =\r\n            'tag rounded-md mb-2 flex self-start text-sm items-center text-black-blue font-bold px-3 py-1 mr-3 opacity-25 cursor-pointer'\r\n        if (selectedTag.includes(tagName)) return defaultClass + ' active'\r\n        else return defaultClass\r\n    }\r\n    function selectTag(tag: Tag): void {\r\n        if (tag.title.length > 0) {\r\n            let tags = [...selectedTag]\r\n            if (tags.includes(tag.title)) {\r\n                tags = tags.filter((tagName) => tagName !== tag.title)\r\n                onTagRemove(tag)\r\n            } else {\r\n                tags.push(tag.title)\r\n                onTagAdd(tag)\r\n            }\r\n            setSelectedTag(tags)\r\n        }\r\n    }\r\n    const submitTodo = () => {\r\n        if (tagTitle.length > 0) {\r\n            let tag = new Tag(tagTitle, customColor, false)\r\n            AddTag(tag)\r\n            selectTag(tag)\r\n        }\r\n        setTagTitle('')\r\n        setShowAddInput(false)\r\n    }\r\n    return (\r\n        <div>\r\n            <span className=\"text-white block p-2 pl-0 font-bold text-sm\">\r\n                Tags\r\n            </span>\r\n            <div className=\"flex md:flex-wrap overflow-x-auto overflow-y-hidden hiddenScrollbar\">\r\n                {tags.map((tag, index) => {\r\n                    return (\r\n                        <div\r\n                            key={tag.title + index}\r\n                            className={generateClassName(tag.title)}\r\n                            style={{\r\n                                backgroundColor: tag.color,\r\n                            }}\r\n                            onClick={() => {\r\n                                selectTag(tag)\r\n                            }}\r\n                        >\r\n                            <span>{tag.title}</span>\r\n                            {!tag.defaultTodo && (\r\n                                <div\r\n                                    className=\"removeTodoAction cursor-pointer\"\r\n                                    onClick={() => {\r\n                                        onTagRemove(tag)\r\n                                        RemoveTag(tag)\r\n                                    }}\r\n                                >\r\n                                    <TrashOutline size={18} />\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    )\r\n                })}\r\n                {showAddInput && (\r\n                    <div>\r\n                        <div\r\n                            className={\r\n                                generateClassName('customDate') +\r\n                                ' bg-white flex active '\r\n                            }\r\n                            onClick={() => {}}\r\n                        >\r\n                            <div\r\n                                className=\"colorpicker w-6 h-6 rounded-md\"\r\n                                style={{ backgroundColor: customColor }}\r\n                            ></div>\r\n                            <input\r\n                                className=\"mx-2 text-sm bg-transparent font-bold color-black-blue focus:outline-none\"\r\n                                type=\"text\"\r\n                                placeholder=\"write tag title\"\r\n                                onChange={(e) => {\r\n                                    setTagTitle(e.currentTarget.value)\r\n                                }}\r\n                                onKeyUp={(e) => {\r\n                                    if (e.key === 'Enter') {\r\n                                        submitTodo()\r\n                                    }\r\n                                }}\r\n                            />\r\n                            <div\r\n                                className=\"colorpicker w-6 h-6 rounded-md border border-gray-500 color-gray-500\"\r\n                                onClick={submitTodo}\r\n                            >\r\n                                <CheckOutline\r\n                                    className=\"stroke-current text-gray-700\"\r\n                                    size={22}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <TwitterPicker\r\n                            color={customColor}\r\n                            onChangeComplete={(color) => {\r\n                                setCustomColor(color.hex)\r\n                            }}\r\n                        />\r\n                    </div>\r\n                )}\r\n                <div\r\n                    className={\r\n                        'dateTag rounded-md mb-2 self-start text-sm text-gray-300 font-bold px-2 py-1 mr-2 opacity-50 cursor-pointer bg-gray-400 bg-opacity-25 flex'\r\n                    }\r\n                    onClick={() => {\r\n                        setShowAddInput(true)\r\n                    }}\r\n                >\r\n                    <PlusOutline size={19} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Tags)\r\n","import { ArrowNarrowRight, ViewListOutline } from 'heroicons-react'\r\nimport React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Todo } from '../../store/todo'\r\nimport { AddTodo } from '../../store/todo/actions'\r\nimport Logo from '../logo'\r\nimport Dates from './Dates'\r\nimport Tags from './Tags'\r\nimport { Tag } from '../../store/tag'\r\nimport { clone, sample } from 'lodash'\r\nconst mapDispatchToProps = { AddTodo }\r\n\r\ntype Props = {\r\n    AddTodo: typeof AddTodo\r\n    onTimelineControllerClicked(): void\r\n}\r\nlet selectedDate = new Date()\r\nlet tags: Tag[] = []\r\nlet placeholders = [\r\n    'Shoping..?',\r\n    'Watching a movie..?',\r\n    'Hanging out...?',\r\n    'Speak with somebody...?',\r\n]\r\nfunction TodoAdder({ AddTodo, onTimelineControllerClicked }: Props) {\r\n    const titleInput = React.createRef<HTMLInputElement>()\r\n    const [value, setValue] = React.useState('')\r\n    const [placeholder, setPlaceholder] = React.useState(sample(placeholders))\r\n    const addTodoHandler = (): void => {\r\n        if (value.trim().length > 0) {\r\n            AddTodo(new Todo(value, '', selectedDate, tags))\r\n            tags = clone(tags)\r\n            setValue('')\r\n            titleInput.current!.value = ''\r\n            setPlaceholder(sample(placeholders))\r\n        }\r\n    }\r\n\r\n    const onTodoTitleChanged = (\r\n        e: React.ChangeEvent<HTMLInputElement>\r\n    ): void => {\r\n        setValue(e.target.value)\r\n    }\r\n    const onTodoTitleKeyUp = (\r\n        e: React.KeyboardEvent<HTMLInputElement>\r\n    ): void => {\r\n        if (e.key === 'Enter') {\r\n            addTodoHandler()\r\n        }\r\n    }\r\n    const onDateChange = (date: Date): void => {\r\n        selectedDate = date\r\n    }\r\n    const onTagAdd = (tag: Tag): void => {\r\n        if (tags.includes(tag) === false) tags.push(tag)\r\n    }\r\n    const onTagRemove = (tag: Tag): void => {\r\n        tags = tags.filter(\r\n            (t) => !(t.title === tag.title && t.color === tag.color)\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"p-5 md:w-1/2 relative\">\r\n            <div className=\"flex justify-between\">\r\n                <Logo />\r\n                <div\r\n                    className=\"md:hidden visible bg-gray-400 bg-opacity-25 p-2 rounded-md cursor-pointer\"\r\n                    onClick={onTimelineControllerClicked}\r\n                >\r\n                    <ViewListOutline className=\"text-gray-300 \" />\r\n                </div>\r\n            </div>\r\n            <h2 className=\"md:text-3xl text-2xl font-bold text-white lg:mt-10 mt-5\">\r\n                What’s you plan to do?\r\n            </h2>\r\n            <p className=\"text-gray-500 font-medium text-sm lg:mt-2 mt-1\">\r\n                Add you plan, so you never forget the works!\r\n            </p>\r\n            <div className=\"inputfields mt-8\">\r\n                <input\r\n                    ref={titleInput}\r\n                    type=\"text\"\r\n                    className=\"px-4 py-3 rounded-md font bg-white bg-opacity-25 text-gray-100 w-full focus:outline-none placeholder-gray-400\"\r\n                    placeholder={placeholder}\r\n                    onChange={onTodoTitleChanged}\r\n                    onKeyUp={onTodoTitleKeyUp}\r\n                />\r\n            </div>\r\n            <div className=\"mt-5\">\r\n                <Dates onDateChange={onDateChange} />\r\n            </div>\r\n            <div className=\"mt-5\">\r\n                <Tags onTagAdd={onTagAdd} onTagRemove={onTagRemove} />\r\n            </div>\r\n            <div className=\"flex flex-row-reverse w-full mt-4\">\r\n                <button\r\n                    onClick={addTodoHandler}\r\n                    className=\"add font-bold flex text-gray-800 px-3 py-1 rounded-md bg-white focus:outline-none\"\r\n                >\r\n                    Add\r\n                    <ArrowNarrowRight className=\"ml-1\" />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(TodoAdder)\r\n","import { Check, DotsVerticalOutline, TrashOutline } from 'heroicons-react'\r\nimport React, { memo } from 'react'\r\nimport { Todo } from '../../store/todo/index'\r\nimport './TodoItem.css'\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\r\nimport { isEqual } from 'lodash'\r\nimport { RemoveTodo } from '../../store/todo/actions'\r\nimport { connect } from 'react-redux'\r\nimport { Tag } from '../../store/tag'\r\n// TODO use memo here to watch showMenu variable\r\n\r\nconst mapDispatchToProps = { RemoveTodo }\r\n\r\nfunction TodoItem({\r\n    todo,\r\n    onTodoCheck,\r\n    showMenu,\r\n    setShowMenu,\r\n    RemoveTodo,\r\n}: {\r\n    todo: Todo\r\n    onTodoCheck(t: Todo): void\r\n    showMenu: boolean\r\n    setShowMenu(t: number): void\r\n    RemoveTodo(t: Todo): void\r\n}) {\r\n    // const [showMenu, setShowMenu] = React.useState(-1)\r\n\r\n    let className =\r\n        'todo-item mb-2 text-black-blue p-2 rounded-md flex justify-between select-none  cursor-pointer bg-active-todo'\r\n\r\n    let todoCheckBoxClassName = 'circle border-2 rounded-full  bg-whtie'\r\n\r\n    let todoTitleClassName = 'ml-2 font-medium'\r\n    if (todo.isChecked()) {\r\n        className += ' bg-opacity-25 done-todo '\r\n        todoCheckBoxClassName += ' border-green-400 text-green-400'\r\n        todoTitleClassName += ' text-green-400 line-through'\r\n    } else {\r\n        todoCheckBoxClassName += '  border-black-blue'\r\n    }\r\n    const uListRef = React.useRef<HTMLUListElement>() as React.MutableRefObject<HTMLUListElement>\r\n\r\n    // handling outside click\r\n    React.useEffect(() => {\r\n        const handleClick = (e: any) => {\r\n            if (uListRef.current)\r\n                if (!uListRef.current.contains(e.target)) setShowMenu(-1)\r\n        }\r\n        document.addEventListener('mousedown', handleClick)\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleClick)\r\n        }\r\n    }, [setShowMenu, uListRef])\r\n    const todoContentStyle = {\r\n        maxWidth:\r\n            todo.getTags().length > 0\r\n                ? todo.getTitle().length > 20\r\n                    ? '70%'\r\n                    : '50%'\r\n                : '95%',\r\n    }\r\n    const todoTagsStyle = {\r\n        maxWidth: todo.getTitle().length > 20 ? '20%' : '55%',\r\n    }\r\n    const tagElement = (tag: Tag) => (\r\n        <span\r\n            key={tag.getId()}\r\n            className=\"tag ml-1 px-2 py-1 rounded-md font-bold text-sm\"\r\n            style={{ backgroundColor: tag.color }}\r\n        >\r\n            {tag.title}\r\n        </span>\r\n    )\r\n    const dropDownMenu = (\r\n        <TransitionGroup className=\"todo-list\">\r\n            {showMenu && (\r\n                <CSSTransition key=\"1\" timeout={100} classNames=\"item\">\r\n                    <ul\r\n                        ref={uListRef}\r\n                        className=\"absolute z-40 right-0 py-1 bg-white shadow-md rounded-md\"\r\n                    >\r\n                        <li\r\n                            className=\"flex justify-center items-center hover:bg-gray-200 rounded-sm py-1 px-2\"\r\n                            onClick={(e) => {\r\n                                e.stopPropagation()\r\n                                RemoveTodo(todo)\r\n                            }}\r\n                        >\r\n                            <TrashOutline size={18} />{' '}\r\n                            <span className=\"font-bold text-sm ml-1\">\r\n                                Delete\r\n                            </span>\r\n                        </li>\r\n                    </ul>\r\n                </CSSTransition>\r\n            )}\r\n        </TransitionGroup>\r\n    )\r\n    return (\r\n        <div\r\n            onClick={() => {\r\n                onTodoCheck(todo)\r\n            }}\r\n            className={className}\r\n        >\r\n            <div className=\"flex items-center \" style={todoContentStyle}>\r\n                <div className={todoCheckBoxClassName}>\r\n                    {todo.isChecked() && <Check size={14} />}\r\n                </div>\r\n                <span className={todoTitleClassName + ' w-full truncate'}>\r\n                    {todo.getTitle()}\r\n                </span>\r\n            </div>\r\n            <div\r\n                className=\"hiddenScrollbar flex justify-between items-center overflow-x-scroll\"\r\n                style={todoTagsStyle}\r\n            >\r\n                {todo.getTags().map((tag) => tagElement(tag))}\r\n                <div className=\"dropdown\">\r\n                    <div\r\n                        onClick={(e) => {\r\n                            e.stopPropagation()\r\n                            setShowMenu(todo.getId())\r\n                        }}\r\n                        className=\"btn flex justify-center items-center w-6 h-6 hover:bg-gray-200 rounded-md text-gray-700\"\r\n                    >\r\n                        <DotsVerticalOutline\r\n                            className=\"text-current\"\r\n                            size={18}\r\n                        />\r\n                    </div>\r\n                    {dropDownMenu}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    mapDispatchToProps\r\n)(\r\n    memo(\r\n        TodoItem,\r\n        (prevProps: any, nextProps: any) => !isEqual(prevProps, nextProps)\r\n    )\r\n)\r\n","import React, { forwardRef, memo } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { UpdateTodo } from '../../store/todo/actions'\r\nimport { Todo } from '../../store/todo/index'\r\nimport TodoItem from './TodoItem'\r\nimport customParseFormat from 'dayjs/plugin/customParseFormat'\r\nimport isToday from 'dayjs/plugin/isToday'\r\nimport isTomorrow from 'dayjs/plugin/isTomorrow'\r\nimport dayjs from 'dayjs'\r\nimport { isEqual, sortBy, zipObject } from 'lodash'\r\nimport FlipMove from 'react-flip-move'\r\n\r\ndayjs.extend(customParseFormat)\r\ndayjs.extend(isToday)\r\ndayjs.extend(isTomorrow)\r\nconst mapStateToProps = null\r\n\r\nconst mapDispatchToProps = { UpdateTodo }\r\n\r\ntype todoGroups = {\r\n    [key: string]: Todo[]\r\n}\r\n\r\ntype Props = {\r\n    UpdateTodo: typeof UpdateTodo\r\n    groups: todoGroups\r\n}\r\n\r\nfunction TodoGroup({ groups, UpdateTodo }: Props) {\r\n    const [showMenu, setShowMenu] = React.useState(-1)\r\n\r\n    // sort object keys by date\r\n    var keys = sortBy(Object.keys(groups), (key) => {\r\n        return dayjs(key, 'DD-MM-YYYY').toDate()\r\n    })\r\n\r\n    // remake object with sorted keys\r\n    let clonedGroups = zipObject(\r\n        keys,\r\n        keys.map((item) => groups[item])\r\n    )\r\n    groups = clonedGroups\r\n\r\n    // sort by alphabet\r\n    Object.keys(groups).forEach((key) => {\r\n        groups[key] = sortBy(groups[key], (item) => {\r\n            return item.getTitle()\r\n        })\r\n    })\r\n\r\n    // Sort by done/undone todos\r\n    Object.keys(groups).forEach((key) => {\r\n        groups[key] = sortBy(groups[key], (item) => {\r\n            return item.isChecked()\r\n        })\r\n    })\r\n\r\n    const todoCheckedHandler = (item: Todo): void => {\r\n        let v: boolean = true\r\n        if (item.isChecked()) {\r\n            v = false\r\n        }\r\n        item.setChecked(v)\r\n\r\n        UpdateTodo(item)\r\n    }\r\n    type forwardProps = {\r\n        todo: Todo\r\n        onTodoCheck(t: Todo): void\r\n        showMenu: boolean\r\n        setShowMenu(t: number): void\r\n    }\r\n    const FunctionalTodoItem = memo(\r\n        forwardRef((props: forwardProps, ref: any) => (\r\n            <div ref={ref}>\r\n                <TodoItem {...props} />\r\n            </div>\r\n        )),\r\n        (prevProps: any, nextProps: any) => !isEqual(prevProps, nextProps)\r\n    )\r\n\r\n    const groupTodos = (todos: Todo[]) => {\r\n        return todos.map((item) => {\r\n            return (\r\n                <FunctionalTodoItem\r\n                    onTodoCheck={todoCheckedHandler}\r\n                    todo={item}\r\n                    key={item.getId()}\r\n                    showMenu={showMenu === item.getId()}\r\n                    setShowMenu={setShowMenu}\r\n                />\r\n            )\r\n        })\r\n    }\r\n    const parseGroupName = (groupName: string): string => {\r\n        const d = dayjs(groupName, 'DD-MM-YYYY')\r\n\r\n        if (d.isToday()) return 'Today'\r\n        if (d.isTomorrow()) return 'Tomorrow'\r\n        if (d.year() === dayjs().year()) return d.format('ddd, D MMM')\r\n        else return d.format('ddd, D MMM, YYYY')\r\n    }\r\n\r\n    return (\r\n        <div className=\"todo-groups\">\r\n            <FlipMove\r\n                staggerDurationBy=\"30\"\r\n                duration={200}\r\n                appearAnimation=\"accordionVertical\"\r\n                enterAnimation=\"accordionVertical\"\r\n                leaveAnimation=\"accordionVertical\"\r\n            >\r\n                {Object.keys(groups).map((groupName: string) => {\r\n                    return (\r\n                        <div className=\"todoGroup mb-10\" key={groupName}>\r\n                            <span className=\"mb-2 block font-bold\">\r\n                                {parseGroupName(groupName)}\r\n                            </span>\r\n                            <FlipMove\r\n                                staggerDurationBy=\"30\"\r\n                                duration={200}\r\n                                appearAnimation=\"accordionVertical\"\r\n                                enterAnimation=\"accordionVertical\"\r\n                                leaveAnimation=\"accordionVertical\"\r\n                            >\r\n                                {groupTodos(groups[groupName])}\r\n                            </FlipMove>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </FlipMove>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoGroup)\r\n","import { groupBy } from 'lodash'\r\nimport React, { forwardRef } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { RootState } from '../../store'\r\nimport { Todo, TodoArray } from '../../store/todo'\r\nimport { UpdateTodo } from '../../store/todo/actions'\r\nimport TodoGroup from './TodoGroup'\r\nimport dayjs from 'dayjs'\r\nconst mapStateToProps = ({ todos }: RootState) => {\r\n    return { todos }\r\n}\r\n\r\nconst mapDispatchToProps = { UpdateTodo }\r\n\r\ntype Props = {\r\n    todos: TodoArray\r\n    forwardedRef: any\r\n}\r\nlet isDragging = false\r\nlet openStyle = { top: '50px' }\r\nlet opened = true\r\nlet policy = 0\r\n\r\nlet closeStyle = () => {\r\n    return {\r\n        top: window.innerHeight - 60 + 'px',\r\n    }\r\n}\r\n\r\nfunction TodoList({ todos, forwardedRef }: Props) {\r\n    const groups = groupBy(todos, (todo: Todo) =>\r\n        dayjs(todo.getDueDate()).format('DD-MM-YYYY')\r\n    )\r\n\r\n    const [style, setStyle] = React.useState<any>(openStyle)\r\n    const dragStart = (e: any) => {\r\n        isDragging = true\r\n        policy = e.touches[0].screenY - parseInt(style.top)\r\n    }\r\n    const onDragging = (e: any): void => {\r\n        if (isDragging)\r\n            setStyle({\r\n                top: e.touches[0].screenY - policy + 'px',\r\n            })\r\n    }\r\n\r\n    const onDragEnd = (): void => {\r\n        if (isDragging) {\r\n            isDragging = false\r\n            if (!opened)\r\n                if (\r\n                    parseInt(style.top) <\r\n                    window.innerHeight / 2 + window.innerHeight / 4\r\n                ) {\r\n                    openTimeline()\r\n                } else {\r\n                    closeTimeline()\r\n                }\r\n            else if (parseInt(style.top) > window.innerHeight / 4) {\r\n                closeTimeline()\r\n            } else {\r\n                openTimeline()\r\n            }\r\n            policy = 0\r\n        }\r\n    }\r\n    const openTimeline = (): void => {\r\n        opened = true\r\n        setStyle(openStyle)\r\n    }\r\n    const closeTimeline = (): void => {\r\n        opened = false\r\n        setStyle(closeStyle())\r\n    }\r\n    const mouseHandler = (): void => {\r\n        if (!opened) openTimeline()\r\n        else closeTimeline()\r\n    }\r\n    forwardedRef.current = mouseHandler\r\n    const emptyTodoDialog = (\r\n        <span className=\"block text-center pt-5\">\r\n            It seems you didn't add any todo yet...!\r\n        </span>\r\n    )\r\n    return (\r\n        <div\r\n            className=\"md:w-1/2 w-full md:static timeline absolute transition-all duration-200 ease-out\"\r\n            style={style}\r\n        >\r\n            <div className=\" h-full p-5 \">\r\n                <div className=\"rounded-2xl md:pt-10 pr-1 h-full bg-white\">\r\n                    <div className=\"h-full styledScroll overflow-y-auto overflow-x-hidden\">\r\n                        <div\r\n                            className=\"line visible md:hidden mb-2 pt-4 pb-2\"\r\n                            onTouchStart={dragStart}\r\n                            onTouchMove={onDragging}\r\n                            onTouchEnd={onDragEnd}\r\n                            onMouseDown={mouseHandler}\r\n                        >\r\n                            <div className=\"w-20 rounded-md bg-gray-500 h-2 m-auto \"></div>\r\n                        </div>\r\n                        <div className=\"p-1 pr-10 pl-10 pb-10\">\r\n                            <h2 className=\"text-black-blue font-bold text-xl md:text-2xl\">\r\n                                Timeline\r\n                            </h2>\r\n                            <p className=\"mt-2 text-gray-500 text-sm\">\r\n                                “It's time to start living the life you've\r\n                                imagined”\r\n                                <span className=\"text-xs\">- Henry James</span>\r\n                            </p>\r\n                            <div className=\"list mt-5\">\r\n                                {Object.keys(groups).length > 0 ? (\r\n                                    <TodoGroup groups={groups} />\r\n                                ) : (\r\n                                    emptyTodoDialog\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Comp = connect(mapStateToProps, mapDispatchToProps)(TodoList)\r\n\r\nexport default forwardRef((props, ref: any) => {\r\n    return <Comp {...props} forwardedRef={ref} />\r\n})\r\n","import React from 'react'\r\nimport './App.css'\r\nimport TodoAdder from './components/TodoAdder'\r\nimport TodoList from './components/TodoList'\r\n\r\nfunction App() {\r\n    const todoListRef = React.useRef<any>()\r\n    const onTimelineControllerClicked = () => {\r\n        todoListRef.current()\r\n    }\r\n    return (\r\n        <div className=\"App max-w-6xl m-auto md:flex h-full md:justify-between\">\r\n            <TodoAdder\r\n                onTimelineControllerClicked={onTimelineControllerClicked}\r\n            />\r\n            <TodoList ref={todoListRef} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);  \r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n}\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react'\r\nimport reactDom from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { compose, createStore } from 'redux'\r\nimport { rootState } from './store'\r\nimport App from './App'\r\nimport './index.css'\r\nimport reportWebVitals from './reportWebVitals'\r\n\r\nimport { defaultTags } from './store/tag/index'\r\nimport { defaultTodos } from './store/todo/index'\r\n\r\nconst composeEnhancers =\r\n    ((window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\r\n        (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()) ||\r\n    compose\r\n\r\nconst store = createStore(\r\n    rootState,\r\n    {\r\n        todos: defaultTodos,\r\n        tags: defaultTags,\r\n    },\r\n    composeEnhancers\r\n)\r\n\r\nreactDom.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n)\r\n\r\nreportWebVitals()\r\n"],"sourceRoot":""}